@inject IAuthorizationService AuthorizationService
@using Microsoft.AspNetCore.Authorization
@model IEnumerable<TCABS.Data.Models.Entities.Enrolment>

@{
    ViewData["Title"] = "Enrolment Details";
}

<div class="row mb-4">
    <div class="col-6">
        <h2>@ViewData["Title"]</h2>
    </div>
    <div class="col-6 text-right">
        @if ((await AuthorizationService.AuthorizeAsync(User, "CREATE_ENROLMENT")).Succeeded)
        {
            <a class="btn btn-primary" asp-action="CreateEnrolment">Create New Enrolment</a>
        }
        else
        {
            <span tabindex="0" data-toggle="tooltip" title="You do not have authority to create Enrolments.">
                <button type="button" class="btn btn-primary" style="pointer-events: none;" disabled>Create New Enrolment</button>
            </span>
        }
    </div>
</div>

<table class="table responsive nowrap" id="enrolmentTable" style="width:100%">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Enrolment_ID)
            </th>
            <th class="filter-select">
                @Html.DisplayNameFor(model => model.Student_Code)
            </th>
            <th class="filter-select">
                @Html.DisplayNameFor(model => model.Student_Name)
            </th>
            <th class="filter-select">
                @Html.DisplayNameFor(model => model.Unit_Code)
            </th>
            <th class="filter-select">
                @Html.DisplayNameFor(model => model.Unit_Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitOffering_StartDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Enrolment_ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Student_Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Student_Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Unit_Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Unit_Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitOffering_StartDate)
                </td>
                <td>
                    @if ((await AuthorizationService.AuthorizeAsync(User, "EDIT_ENROLMENT")).Succeeded)
                    {
                        <a class="btn btn-success" asp-action="EditEnrolment" asp-route-id="@item.Enrolment_ID">Edit</a>
                    }
                    else
                    {
                        <span tabindex="0" data-toggle="tooltip" title="You do not have authority to edit Enrolments.">
                            <button type="button" class="btn btn-success" style="pointer-events: none;" disabled>Edit</button>
                        </span>
                    }
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.Student_Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Student_Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Unit_Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Unit_Name)
            </th>
            <th class="filter-input">
                @Html.DisplayNameFor(model => model.UnitOffering_StartDate)
            </th>
            <th></th>
        </tr>
    </tfoot>
</table>
@section Scripts
    {
    <script>
    var searchValue = document.location.href.split('?').pop();
    var value = searchValue.split('=').pop();
    var table = $(document).ready(function () {
        $('#enrolmentTable .filter-input').each(function () {

            $(this).html('<input class="form-control" type="text" placeholder="Search" />');
        });
        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            $($.fn.dataTable.tables(true)).DataTable()
                .columns.adjust()
                .fixedColumns().relayout();
        });

        $('#enrolmentTable').DataTable({

            "dom": '<"d-flex justify-content-between"<lfr>>rt<"bottom"ip><"clear">',
            "responsive": true,
            initComplete: function () {
                this.api().columns('.filter-select').every(function () {
                    var column = this;
                    var select = $('<select class="form-control"><option value=""></option></select>')
                        .appendTo($(column.footer()).empty())
                        .on('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? '^' + val + '$' : '', true, false)
                                .draw();
                        });

                    column.data().unique().sort().each(function (d, j) {
                        select.append('<option value="' + d + '">' + d + '</option>')
                    });
                });
                this.api().columns().every(function () {
                    var that = this;

                    $('input', this.footer()).on('keyup change', function () {
                        if (that.search() !== this.value) {
                            that
                                .search(this.value)
                                .draw();
                        }
                    });

                });

            }


        });

    });
    </script>
}
