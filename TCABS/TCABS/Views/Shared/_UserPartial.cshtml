@using System.Security.Claims
@using Identity.Dapper.Entities
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity

@functions {

private string GetFullName(ClaimsPrincipal user)
{
    var firstName = user.Claims.First(x => x.Type == "FIRSTNAME").Value;
    var lastName = user.Claims.First(x => x.Type == "LASTNAME").Value;
    var uID = user.Claims.First(x => x.Type == "UNIQUEID").Value;
    return firstName + " " + lastName + " (" + uID + ")";
}

}

@inject SignInManager<DapperIdentityUser> SignInManager
@inject UserManager<DapperIdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <ul class="nav navbar-nav ml-auto">
        <!--await Component.InvokeAsync("UnitSelected", Context.Session.GetInt32("SELECTED_UNIT"))-->
        <li><a class="nav-link" asp-controller="Home" asp-action="SelectUnit">Select a Unit</a>
        </li>
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @GetFullName(User)
            </a>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="userDropdown">
                <a asp-controller="Manage" asp-action="Index" class="dropdown-item">Settings</a>
                <div class="dropdown-divider"></div>
                <form asp-controller="Account" asp-action="Logout" method="post"><button type="submit" class="dropdown-item">Logout</button></form>
            </div>
        </li>
    </ul>
}